syntax = "proto3";
import "google/protobuf/timestamp.proto";


package distlock;


// A distributed lock service
service Distlock {
  // Creates a new lock with the given key on the server.
  rpc CreateLock(Lock) returns (EmptyResponse) {}

  // Acquires the lock with the given key from the server.
  rpc AcquireLock(AcquireLockRequest) returns (Lock) {}

  // Releases the lock with the given key from the server.
  rpc ReleaseLock(Lock) returns (EmptyResponse) {}

  // Fetches the lock with the given key from the server, without acquiring it.
  rpc GetLock(Lock) returns (Lock) {}

  // Fetches all locks from the server, without acquiring any of them.
  rpc ListLocks(EmptyRequest) returns (Locks) {}

  // Deletes the lock with the given key from the server.
  rpc DeleteLock(Lock) returns (EmptyResponse) {}
}


// The empty request.
message EmptyRequest {}


// The empty response.
message EmptyResponse {}


// The message for a lock object.
message Lock {
  string key = 1;
  bool acquired = 2;
  int64 clock = 3;
  google.protobuf.Timestamp expires_at = 4;
}


// The message for an array of lock objects.
message Locks {
  repeated Lock locks = 1;
}


// The request message containing the key name of the lock to acquire.
message AcquireLockRequest {
  string key = 1;
  int64 expires_in_seconds = 2;
}
